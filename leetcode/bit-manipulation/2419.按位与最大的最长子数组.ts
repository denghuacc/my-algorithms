/*
 * @lc app=leetcode.cn id=2419 lang=typescript
 *
 * [2419] 按位与最大的最长子数组
 *
 * https://leetcode.cn/problems/longest-subarray-with-maximum-bitwise-and/description/
 *
 * algorithms
 * Medium (45.52%)
 * Likes:    40
 * Dislikes: 0
 * Total Accepted:    18K
 * Total Submissions: 36.4K
 * Testcase Example:  '[1,2,3,3,2,2]'
 *
 * 给你一个长度为 n 的整数数组 nums 。
 *
 * 考虑 nums 中进行 按位与（bitwise AND）运算得到的值 最大 的 非空 子数组。
 *
 *
 * 换句话说，令 k 是 nums 任意 子数组执行按位与运算所能得到的最大值。那么，只需要考虑那些执行一次按位与运算后等于 k 的子数组。
 *
 *
 * 返回满足要求的 最长 子数组的长度。
 *
 * 数组的按位与就是对数组中的所有数字进行按位与运算。
 *
 * 子数组 是数组中的一个连续元素序列。
 *
 *
 *
 * 示例 1：
 *
 *
 * 输入：nums = [1,2,3,3,2,2]
 * 输出：2
 * 解释：
 * 子数组按位与运算的最大值是 3 。
 * 能得到此结果的最长子数组是 [3,3]，所以返回 2 。
 *
 *
 * 示例 2：
 *
 *
 * 输入：nums = [1,2,3,4]
 * 输出：1
 * 解释：
 * 子数组按位与运算的最大值是 4 。
 * 能得到此结果的最长子数组是 [4]，所以返回 1 。
 *
 *
 *
 *
 * 提示：
 *
 *
 * 1 <= nums.length <= 10^5
 * 1 <= nums[i] <= 10^6
 *
 *
 */

// @lc code=start
/**
 * 找到按位与最大的最长子数组
 *
 * 核心思路：
 * 1. 按位与运算的特性：a & b <= min(a, b)
 * 2. 子数组的按位与结果不会超过数组中的最大值
 * 3. 只有等于最大值的元素才能产生最大的按位与结果
 * 4. 因此只需要找到连续的最大值的最长序列
 *
 * @param nums 输入数组
 * @returns 最长子数组的长度
 */
function longestSubarray(nums: number[]): number {
  // 记录当前连续最大值的长度
  let maxCnt = 0;
  // 记录当前连续计数
  let cnt = 0;
  // 记录当前最大值
  let cur = 0;

  // 遍历数组
  for (const num of nums) {
    if (num > cur) {
      // 遇到更大的数，更新最大值和计数
      cur = num;
      cnt = 1;
      maxCnt = 1;
    } else if (num === cur) {
      // 遇到相等的最大值，增加连续计数
      cnt++;
      maxCnt = Math.max(maxCnt, cnt);
    } else {
      // 遇到更小的数，重置连续计数
      cnt = 0;
    }
  }

  return maxCnt;
}
// @lc code=end

/*
解题思路详解：

1. 问题本质：
   - 找到数组中按位与运算结果最大的子数组
   - 返回满足条件的子数组的最大长度
   - 关键：按位与运算的单调性特性

2. 算法分析：
   - 时间复杂度：O(n)，只需要一次遍历
   - 空间复杂度：O(1)，只使用常数个变量
   - 算法类型：贪心算法

3. 核心洞察：
   - 按位与运算具有单调性：a & b <= min(a, b)
   - 子数组的按位与结果不会超过数组中的最大值
   - 只有等于最大值的元素才能产生最大的按位与结果
   - 因此问题转化为：找到连续的最大值的最长序列

4. 实现要点：
   - 维护当前最大值 cur
   - 维护当前连续计数 cnt
   - 维护全局最大连续长度 maxCnt
   - 遇到更大值时重置计数
   - 遇到相等值时增加计数
   - 遇到更小时重置计数

5. 优化思路：
   - 利用按位与的单调性避免复杂的子数组计算
   - 一次遍历即可得到结果
   - 空间复杂度优化到 O(1)

6. 边界情况：
   - 空数组：题目保证非空
   - 单个元素：返回 1
   - 所有元素相等：返回数组长度
   - 最大值不连续：返回 1

7. 类似问题：
   - 最长连续递增子序列
   - 最大子数组和
   - 按位或最大的最长子数组（类似思路）
*/
